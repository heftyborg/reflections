Q: What happens when you initialize a repository? Why do you need to do it?

A: Git creates an empty repository getting ready to track files. It creates .git
folder to store its data. We need to initialize repository to prepare its
working environment before we could start tracking file changes.

Q: How is the staging area different from the working directory and the
repository? What value do you think it offers?

A: Staging area is a special state(?) of the repository allowing us to prepare
changes that we would like to save to repository in the next commit. It may
contain not all changes in the working directory but a specific subset of the
changes(files). It allows us to be more specific and precise when preparing
commits.

Q: How can you use the staging area to make sure you have one commit per logical
change?

When using staging area we can rely upon `git diff` command to compare changes
between working directory and staging area, and `git diff --staging` command to
compare staging are and recent commit, all allowing us to prepare a commit for
single logical change.

Q: What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

A: Keeping a master branch separated from feature/fix branches allows to always
have working code available. When we're in a separate branch we do not have to
worry about making mistakes and breaking the code.

Q: How do the diagrams help you visualize the branch structure?

A: It helps navigate the branches and keep track of which branch holds which
commits.
