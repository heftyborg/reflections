Q: When would you want to use a remote repository rather than keeping all your work local?

A: Using remote repositories is an easy way to share your work with others and participate
in others projects.

Q: Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

A: Automatic changes pull might break your local copy of files before its finished and
ready for publishing (pushing to remote).

Q: Describe the differences between forks, clones, and branches. When would you use one
instead of another?

A: Forks basically are clones of a repository within GitHub eco-system. Clones are copys
of an existing repository whether its local or remote repositories. Branches are a part of
repository used to separate working copy from experimental features. We would use fork
when we do not have access to editing someone elses repository. After forking a repo on
GitHub we can create a local forked repo clone and be able to make changes to it (push/pull).

Q: What is the benefit of having a copy of the last known state of the remote stored locally?

A: This would allow to easily track the state of local and remote repositiories and choose
the right solution when doing merges.

Q: How would you collaborate without using Git or GitHub? What would be easier, and what
would be harder?

A: Sending archives or separate files back and forth leaving comments in the files or emails.
Not cool.

Q: When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?

A: Using a separate branch is benificial to making changes in the master branch when we want
to test or share a particular idea that not necesserily might be accepted or valid. Its
important to always keep a working/valid snapshot in master branch, and switching to a
separate branch for working on a new idea allows us just that.
